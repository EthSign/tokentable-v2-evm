{
  "address": "0x6c241FF6d5c3f074b49aC10872770529d9e27BA4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "unlockerImpl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "futureTokenImpl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trackerTokenImpl",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "futureTokenBeacon",
      "outputs": [
        {
          "internalType": "contract UpgradeableBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trackerTokenBeacon",
      "outputs": [
        {
          "internalType": "contract UpgradeableBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockerBeacon",
      "outputs": [
        {
          "internalType": "contract UpgradeableBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "upgradeFutureToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "upgradePreviewToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "upgradeUnlocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
  "receipt": {
    "to": null,
    "from": "0x55D22d83752a9bE59B8959f97FCf3b2CAbca5094",
    "contractAddress": "0x6c241FF6d5c3f074b49aC10872770529d9e27BA4",
    "transactionIndex": 1,
    "gasUsed": "992787",
    "logsBloom": "0x00000000004000000040000002000000400000000000000000800008000000200000000000000000008000000200000000000000000000001000000000000000000000000000000000000000440002000041000000000040000000000000000000000000020000000000000000000800000000000000000000000000000400400000000000000000000000020000000000000000004000400000000000000000000000000000080002000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000800000020000000000000000000014000000000000000000009800400000400000100000000",
    "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59",
    "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x6c241FF6d5c3f074b49aC10872770529d9e27BA4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000055d22d83752a9be59b8959f97fcf3b2cabca5094"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x93f340666f0d2197c9FEF7Ec733dA5AD12811C8a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c241ff6d5c3f074b49ac10872770529d9e27ba4"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x93f340666f0d2197c9FEF7Ec733dA5AD12811C8a",
        "topics": [
          "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
          "0x0000000000000000000000002774d96a841e522549ce7add3825fc31075384cf"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x29790dE1320f0aBA62A8f1F3Ed570C02E98b400f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c241ff6d5c3f074b49ac10872770529d9e27ba4"
        ],
        "data": "0x",
        "logIndex": 14,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x29790dE1320f0aBA62A8f1F3Ed570C02E98b400f",
        "topics": [
          "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
          "0x0000000000000000000000007915da247674e430b2a4dcf01e4471f709428bc0"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x4457c7bFEAe79243573454bf3053660f4bc1cb91",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c241ff6d5c3f074b49ac10872770529d9e27ba4"
        ],
        "data": "0x",
        "logIndex": 16,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 2807918,
        "transactionHash": "0x6effeae82534e4f3d63a9d0c662bede1c990debaa1e549917e81f1b68047abb4",
        "address": "0x4457c7bFEAe79243573454bf3053660f4bc1cb91",
        "topics": [
          "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
          "0x0000000000000000000000002906d67a0929e1e6c9102aa4d97e1f1f9b112153"
        ],
        "data": "0x",
        "logIndex": 17,
        "blockHash": "0xaa30eecf64be52f75ceaf841955daffd6fc9a50c7d326810e58ccde2d254ff59"
      }
    ],
    "blockNumber": 2807918,
    "cumulativeGasUsed": "6115175",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2774d96a841E522549CE7ADd3825fC31075384Cf",
    "0x7915dA247674E430b2a4Dcf01e4471f709428Bc0",
    "0x2906d67A0929e1E6C9102AA4d97e1f1F9B112153"
  ],
  "numDeployments": 1,
  "solcInputHash": "8f7ddac5c7c5c41eec7534097194a27b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"unlockerImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"futureTokenImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trackerTokenImpl\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"futureTokenBeacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trackerTokenBeacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockerBeacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"upgradeFutureToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"upgradePreviewToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"upgradeUnlocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"details\":\"This contract manages the upgradeable beacons that we use to seamlessly upgrade TokenTableUnlocker, TTFutureToken, and TTTrackerToken on behalf of our users in the future. This contract should be deployed using TTUDeployer.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TTUV2BeaconManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/TTUV2BeaconManager.sol\":\"TTUV2BeaconManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/UpgradeableBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Ownable} from \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract UpgradeableBeacon is IBeacon, Ownable {\\n    address private _implementation;\\n\\n    /**\\n     * @dev The `implementation` of the beacon is invalid.\\n     */\\n    error BeaconInvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev Emitted when the implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\\n     */\\n    constructor(address implementation_, address initialOwner) Ownable(initialOwner) {\\n        _setImplementation(implementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function implementation() public view virtual returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newImplementation` must be a contract.\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\\n        _setImplementation(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newImplementation` must be a contract.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert BeaconInvalidImplementation(newImplementation);\\n        }\\n        _implementation = newImplementation;\\n        emit Upgraded(newImplementation);\\n    }\\n}\\n\",\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"contracts/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface is implemented by all major TokenTable contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0x89c6315f70b485eb57df23c9c2cb23bd21a716a07af4384a091cbcf415f8b74a\",\"license\":\"UNLICENSED\"},\"contracts/proxy/TTUV2BeaconManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.20;\\n\\nimport {UpgradeableBeacon} from \\\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IVersionable} from \\\"../interfaces/IVersionable.sol\\\";\\n\\n/**\\n * @title TTUV2BeaconManager\\n * @author Jack Xu @ EthSign\\n * @dev This contract manages the upgradeable beacons that we use to seamlessly\\n * upgrade TokenTableUnlocker, TTFutureToken, and TTTrackerToken on behalf of\\n * our users in the future.\\n *\\n * This contract should be deployed using TTUDeployer.\\n */\\ncontract TTUV2BeaconManager is Ownable, IVersionable {\\n    UpgradeableBeacon public immutable unlockerBeacon;\\n    UpgradeableBeacon public immutable futureTokenBeacon;\\n    UpgradeableBeacon public immutable trackerTokenBeacon;\\n\\n    constructor(\\n        address unlockerImpl,\\n        address futureTokenImpl,\\n        address trackerTokenImpl\\n    ) Ownable(_msgSender()) {\\n        unlockerBeacon = new UpgradeableBeacon(unlockerImpl, address(this));\\n        futureTokenBeacon = new UpgradeableBeacon(\\n            futureTokenImpl,\\n            address(this)\\n        );\\n        trackerTokenBeacon = new UpgradeableBeacon(\\n            trackerTokenImpl,\\n            address(this)\\n        );\\n    }\\n\\n    function upgradeUnlocker(address newImpl) external onlyOwner {\\n        unlockerBeacon.upgradeTo(newImpl);\\n    }\\n\\n    function upgradeFutureToken(address newImpl) external onlyOwner {\\n        futureTokenBeacon.upgradeTo(newImpl);\\n    }\\n\\n    function upgradePreviewToken(address newImpl) external onlyOwner {\\n        trackerTokenBeacon.upgradeTo(newImpl);\\n    }\\n\\n    function version() external pure returns (string memory) {\\n        return \\\"2.0.1\\\";\\n    }\\n}\\n\",\"keccak256\":\"0x8e884de39f83d9f53039ec69bf5e441e22941fd4b6d67e6647faa889f32f052d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b50604051610b10380380610b1083398101604081905261002f916101cf565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610156565b50823060405161006d906101a6565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156100a0573d6000803e3d6000fd5b506001600160a01b0316608052604051829030906100bd906101a6565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156100f0573d6000803e3d6000fd5b506001600160a01b031660a0526040518190309061010d906101a6565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610140573d6000803e3d6000fd5b506001600160a01b031660c05250610212915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610438806106d883390190565b80516001600160a01b03811681146101ca57600080fd5b919050565b6000806000606084860312156101e457600080fd5b6101ed846101b3565b92506101fb602085016101b3565b9150610209604085016101b3565b90509250925092565b60805160a05160c0516104826102566000396000818161016b015261027501526000818161010801526102df01526000818161019201526101ee01526104826000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610142578063a47bee7f14610153578063d63ea2c514610166578063ec5319871461018d578063f2fde38b146101b457600080fd5b8063182e5914146100a3578063468b6a49146100b857806354fd4d50146100cb578063715018a6146100fb57806378e65efc14610103575b600080fd5b6100b66100b13660046103ce565b6101c7565b005b6100b66100c63660046103ce565b61024e565b6040805180820182526005815264322e302e3160d81b602082015290516100f291906103fe565b60405180910390f35b6100b66102a4565b61012a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f2565b6000546001600160a01b031661012a565b6100b66101613660046103ce565b6102b8565b61012a7f000000000000000000000000000000000000000000000000000000000000000081565b61012a7f000000000000000000000000000000000000000000000000000000000000000081565b6100b66101c23660046103ce565b61030e565b6101cf610351565b604051631b2ce7f360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe6906024015b600060405180830381600087803b15801561023357600080fd5b505af1158015610247573d6000803e3d6000fd5b5050505050565b610256610351565b604051631b2ce7f360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe690602401610219565b6102ac610351565b6102b6600061037e565b565b6102c0610351565b604051631b2ce7f360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe690602401610219565b610316610351565b6001600160a01b03811661034557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61034e8161037e565b50565b6000546001600160a01b031633146102b65760405163118cdaa760e01b815233600482015260240161033c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103e057600080fd5b81356001600160a01b03811681146103f757600080fd5b9392505050565b600060208083528351808285015260005b8181101561042b5785810183015185820160400152820161040f565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220b4dd63485a8d90083e9a1da81c89cb3c98a4b84eaa470937e3f243d983b9bdbf64736f6c63430008140033608060405234801561001057600080fd5b5060405161043838038061043883398101604081905261002f91610165565b806001600160a01b03811661005f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006881610079565b50610072826100c9565b5050610198565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036100ff5760405163211eb15960e21b81526001600160a01b0382166004820152602401610056565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461016057600080fd5b919050565b6000806040838503121561017857600080fd5b61018183610149565b915061018f60208401610149565b90509250929050565b610291806101a76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a36600461022b565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100da565b6000546001600160a01b031661007e565b61006f6100c136600461022b565b6100ee565b6100ce61012e565b6100d78161015b565b50565b6100e261012e565b6100ec60006101db565b565b6100f661012e565b6001600160a01b03811661012557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100d7816101db565b6000546001600160a01b031633146100ec5760405163118cdaa760e01b815233600482015260240161011c565b806001600160a01b03163b6000036101915760405163211eb15960e21b81526001600160a01b038216600482015260240161011c565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023d57600080fd5b81356001600160a01b038116811461025457600080fd5b939250505056fea2646970667358221220b0444140ba46af526d9100801e0762a0b652f6c42388ff909f0688b08bfa82b264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610142578063a47bee7f14610153578063d63ea2c514610166578063ec5319871461018d578063f2fde38b146101b457600080fd5b8063182e5914146100a3578063468b6a49146100b857806354fd4d50146100cb578063715018a6146100fb57806378e65efc14610103575b600080fd5b6100b66100b13660046103ce565b6101c7565b005b6100b66100c63660046103ce565b61024e565b6040805180820182526005815264322e302e3160d81b602082015290516100f291906103fe565b60405180910390f35b6100b66102a4565b61012a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f2565b6000546001600160a01b031661012a565b6100b66101613660046103ce565b6102b8565b61012a7f000000000000000000000000000000000000000000000000000000000000000081565b61012a7f000000000000000000000000000000000000000000000000000000000000000081565b6100b66101c23660046103ce565b61030e565b6101cf610351565b604051631b2ce7f360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe6906024015b600060405180830381600087803b15801561023357600080fd5b505af1158015610247573d6000803e3d6000fd5b5050505050565b610256610351565b604051631b2ce7f360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe690602401610219565b6102ac610351565b6102b6600061037e565b565b6102c0610351565b604051631b2ce7f360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe690602401610219565b610316610351565b6001600160a01b03811661034557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61034e8161037e565b50565b6000546001600160a01b031633146102b65760405163118cdaa760e01b815233600482015260240161033c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103e057600080fd5b81356001600160a01b03811681146103f757600080fd5b9392505050565b600060208083528351808285015260005b8181101561042b5785810183015185820160400152820161040f565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220b4dd63485a8d90083e9a1da81c89cb3c98a4b84eaa470937e3f243d983b9bdbf64736f6c63430008140033",
  "devdoc": {
    "author": "Jack Xu @ EthSign",
    "details": "This contract manages the upgradeable beacons that we use to seamlessly upgrade TokenTableUnlocker, TTFutureToken, and TTTrackerToken on behalf of our users in the future. This contract should be deployed using TTUDeployer.",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "TTUV2BeaconManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 624,
        "contract": "contracts/proxy/TTUV2BeaconManager.sol:TTUV2BeaconManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}